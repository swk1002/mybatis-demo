<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--1.这个文件就是映射配置文件-->
<!--2.mybatis的映射配置文件位置必须和dao接口的包结构相同，并且在创建目录时候需要一级一级创建-->

<!--3.mapper标签的namespace属性取值必须是dao接口的全限定类名-->
<mapper namespace="com.kong.dao.IUserDao">
    <!--4.这个id是对应接口里方法的名字，不可以随意写-->
    <select id="findAll" resultType="com.kong.domain.User"> <!--id="findAll" ,配置查询所有-->
        select * from user
    </select>

    <!--增加用户的操作，需要设置参数类型让mybatis知道操作的是什么对象，#{username}是固定格式用法-->
    <insert id="saveUser" parameterType="com.kong.domain.User">
        <!--配置数据插入之后，获取插入数据的id的值，通过sql select last_insert_id()来实现-->
        <!--keyProperty="id"对应的User类的字段名；keyColumn="id"对应数据库的表字段；order="AFTER"是值这个sql的执行顺序-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
    </insert>
    <update id="updateUser" parameterType="com.kong.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        <!--因为这里只有一个参数，#{id}在这里只是一个占位符，可以随便起名字-->
        delete from user where id=#{id}
    </delete>

    <select id="findById" parameterType="java.lang.Integer" resultType="com.kong.domain.User">
        select * from user where id=#{id}
    </select>

    <select id="findByName" parameterType="String" resultType="com.kong.domain.User">
        select * from user where username like #{username}
    </select>

    <select id="countAll" resultType="int">
        select count(id) from user
    </select>

    <!--使用QueryVo作为查询条件-->
    <select id="findByQueryVo" parameterType="com.kong.domain.QueryVo" resultType="com.kong.domain.User">
        <!--QueryVo类里有User对象，所以这里可以直接使用user.username来赋值-->
        select * from user where username like #{user.username}
    </select>

</mapper>